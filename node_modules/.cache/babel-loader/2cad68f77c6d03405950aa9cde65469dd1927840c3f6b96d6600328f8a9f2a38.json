{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StockHeader = _resolveComponent(\"StockHeader\");\n  const _component_StockBox = _resolveComponent(\"StockBox\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_StockHeader, {\n    appName: \"Stock Information\",\n    authorName: \"Sai Krishna Pokuri\"\n  }), _createVNode(_component_StockBox, {\n    stocks: $data.stocks\n  }, null, 8 /* PROPS */, [\"stocks\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_StockHeader","appName","authorName","_component_StockBox","stocks","$data"],"sources":["/Users/saipokuri/Desktop/myportfolio/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <StockHeader appName=\"Stock Information\" authorName=\"Sai Krishna Pokuri\" />\n    <StockBox :stocks=\"stocks\" />\n  </div>\n</template>\n\n<script>\nimport StockHeader from '@/components/MyHeader.vue';\nimport StockBox from '@/components/StockBox.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    StockHeader,\n    StockBox\n  },\n  data() {\n    return {\n      stocks: []\n    };\n  },\n  methods: {\n    async fetchStocks() {\n      try {\n        const res = await fetch('https://myapp-h8il.onrender.com/api');\n        if (!res.ok) {\n          throw new Error(`Failed to fetch stocks: ${res.statusText}`);\n        }\n        const data = await res.json();\n        return data;\n      } catch (error) {\n        console.error('Error fetching stocks:', error);\n        return [];\n      }\n    }\n  },\n  async created() {\n    this.stocks = await this.fetchStocks();\n  }\n};\n</script>\n\n<style>\n/* Add global styles if needed */\n</style>"],"mappings":";;;;uBACEA,mBAAA,CAGM,cAFJC,YAAA,CAA2EC,sBAAA;IAA9DC,OAAO,EAAC,mBAAmB;IAACC,UAAU,EAAC;MACpDH,YAAA,CAA6BI,mBAAA;IAAlBC,MAAM,EAAEC,KAAA,CAAAD;EAAM,oC"},"metadata":{},"sourceType":"module","externalDependencies":[]}